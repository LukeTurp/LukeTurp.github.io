{"version":3,"sources":["components/exampleApp/index.js","App.js","reportWebVitals.js","index.js"],"names":["hardCodedPaymentRequestObj","currencyCode","countryCode","supportedNetworks","merchantCapabilities","total","label","amount","type","shippingType","shippingMethods","detail","identifier","requiredShippingContactFields","requiredBillingContactFields","shippingContact","phoneNumber","emailAddress","givenName","familyName","addressLines","subLocality","locality","postalCode","country","billingContact","ExampleApp","useState","prInterface","setPrInterface","createTecPrInterface","useTecPaymentsRequest","useEffect","tecPrInterface","console","log","canMakePayments","then","availablePrMethods","applePay","listenFor","tokenResp","a","completePayment","cancelEvent","style","height","paymentRequestInterface","teConnectInstance","createTEConnect","enableTecPR","App","teConnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA8BMA,EAA6B,CAC/BC,aAAc,MACdC,YAAa,KACbC,kBAAmB,CAAC,OAAQ,aAAc,OAAQ,WAAY,OAC9DC,qBAAsB,CAAC,eACvBC,MAAO,CACHC,MAAO,mBACPC,OAAQ,OACRC,KAAM,SAEVC,aAAc,CAAC,YACfC,gBAAiB,CACb,CACIJ,MAAO,gBACPK,OAAQ,oBACRJ,OAAQ,OACRK,WAAY,gBAEhB,CACIN,MAAO,oBACPK,OAAQ,4BACRJ,OAAQ,QACRK,WAAY,mBAGpBC,8BAA+B,CAC3B,OACA,QACA,SAEJC,6BAA8B,CAC1B,OACA,QACA,SAEJC,gBAAiB,CACbC,YAAa,WACbC,aAAc,uBACdC,UAAW,MACXC,WAAY,SACZC,aAAc,CAAC,eAAgB,aAC/BC,YAAa,cACbC,SAAU,KACVC,WAAY,QACZC,QAAS,gBACTtB,YAAa,MAEjBuB,eAAgB,CACZT,YAAa,WACbC,aAAc,uBACdC,UAAW,MACXC,WAAY,SACZC,aAAc,CAAC,eAAgB,aAC/BC,YAAa,cACbC,SAAU,KACVC,WAAY,QACZC,QAAS,gBACTtB,YAAa,OA+DNwB,EA3DI,WAAO,IAAD,EACmBC,oBAAS,kBAAM,KADlC,mBACbC,EADa,KACAC,EADA,KAEfC,EAAuBC,kCA8C7B,OA5CAC,qBAAU,WACN,GAAIF,EAAsB,CACtB,IAAMG,EAAiBH,EAAqB9B,GAC5CkC,QAAQC,IAAI,iBAAkBF,GAE9BA,EAAeG,kBAAkBC,MAAM,SAAAC,GACnCJ,QAAQC,IAAI,2BAA4BG,GAEpCA,EAAmBC,UACnBV,EAAeI,MAGvBA,EAAeO,UAAU,gBAAzB,uCAA0C,WAAOC,GAAP,SAAAC,EAAA,sDACtCR,QAAQC,IAAI,mCACZD,QAAQC,IAAIM,GACZP,QAAQC,IAAI,eACZD,QAAQC,WAAWM,EAAUE,iBAE7BF,EAAUE,gBAAgB,WANY,2CAA1C,uDASAV,EAAeO,UAAU,qBAAzB,uCAA+C,WAAOI,GAAP,SAAAF,EAAA,sDAC3CR,QAAQC,IAAI,iCACZD,QAAQC,IAAIS,GACZV,QAAQC,IAAI,eAH+B,2CAA/C,uDAQJD,QAAQC,IAAI,8BAA+BL,KAC5C,CAACA,IAeA,sBAAKe,MAAO,CAAEC,OAAQ,QAAtB,UACI,0CAEElB,GAAe,cAAC,2BAAD,CAA0BmB,wBAA0BnB,QCxI3EoB,EAAoBC,0BAAgB,mEAAoE,CAAEC,aAAa,IAQ9GC,EANH,kBACR,cAAC,YAAD,CAAWC,UAAYJ,EAAvB,SACI,cAAC,EAAD,OCCOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.cd859b4b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { \r\n    //CardEntry, useTeConnect, \r\n    TecPaymentRequestButtons,\r\n    useTecPaymentsRequest  } from '@magensa/te-connect-react';\r\n\r\n\r\n// const customStyles = {\r\n//     base: {\r\n//         wrapper: { \r\n//             margin: 0, \r\n//             padding: 0\r\n//         },\r\n//         variants: {\r\n//             inputType: 'outlined',\r\n//             inputMargin: 'dense',\r\n//             autoMinHeight: true\r\n//         },\r\n//        backgroundColor: \"#424242\"\r\n//     },\r\n//     boxes: {\r\n//         labelColor: \"#BB86FC\",\r\n//         textColor: \"#BB86FC\",\r\n//         borderRadius: 10,\r\n//         errorColor: \"#CF6679\",\r\n//         inputColor: '#121212'\r\n//     }\r\n// }\r\n\r\n\r\nconst hardCodedPaymentRequestObj = {\r\n    currencyCode: \"USD\",\r\n    countryCode: \"US\",\r\n    supportedNetworks: ['visa', 'masterCard', 'amex', 'discover', 'jcb'],\r\n    merchantCapabilities: ['supports3DS'],\r\n    total: {\r\n        label: \"Test Transaction\",\r\n        amount: \"1.00\",\r\n        type: \"final\"\r\n    },\r\n    shippingType: ['shipping'],\r\n    shippingMethods: [\r\n        {    \r\n            label: 'Free Shipping',\r\n            detail: \"Arrives in a week\",\r\n            amount: '0.00',\r\n            identifier: \"FreeShipping\"\r\n        },\r\n        {    \r\n            label: 'Not Free Shipping',\r\n            detail: \"Arrives in less than week\",\r\n            amount: '10.00',\r\n            identifier: \"ChargeShipping\"\r\n        }\r\n    ],\r\n    requiredShippingContactFields: [\r\n        'name',\r\n        'email',\r\n        'phone'\r\n    ],\r\n    requiredBillingContactFields: [\r\n        'name',\r\n        'email',\r\n        'phone'\r\n    ],\r\n    shippingContact: {\r\n        phoneNumber: '888-8888',\r\n        emailAddress: 'something@example.ne',\r\n        givenName: 'Bob',\r\n        familyName: 'Kahuna',\r\n        addressLines: ['123 Main St.', 'Suite 101'],\r\n        subLocality: 'Los Angeles',\r\n        locality: 'CA',\r\n        postalCode: '90010',\r\n        country: 'United States',\r\n        countryCode: 'US',\r\n    },\r\n    billingContact: {\r\n        phoneNumber: '888-8888',\r\n        emailAddress: 'something@example.ne',\r\n        givenName: 'Bob',\r\n        familyName: 'Kahuna',\r\n        addressLines: ['123 Main St.', 'Suite 101'],\r\n        subLocality: 'Los Angeles',\r\n        locality: 'CA',\r\n        postalCode: '90010',\r\n        country: 'United States',\r\n        countryCode: 'US',\r\n    }\r\n};\r\n\r\nconst ExampleApp = () => {\r\n    const [ prInterface, setPrInterface ] = useState(() => false);\r\n    const createTecPrInterface = useTecPaymentsRequest();\r\n\r\n    useEffect(() => {\r\n        if (createTecPrInterface) {\r\n            const tecPrInterface = createTecPrInterface(hardCodedPaymentRequestObj);\r\n            console.log('real interface', tecPrInterface);\r\n\r\n            tecPrInterface.canMakePayments().then( availablePrMethods => {\r\n                console.log('canMakePayments Result: ', availablePrMethods);\r\n\r\n                if (availablePrMethods.applePay)\r\n                    setPrInterface(tecPrInterface);\r\n            });\r\n\r\n            tecPrInterface.listenFor('confirm-token', async (tokenResp) => {\r\n                console.log('[CUSTOMER TEC COMPLETE EVENT]: ');\r\n                console.log(tokenResp);\r\n                console.log('typeof func');\r\n                console.log(typeof(tokenResp.completePayment));\r\n\r\n                tokenResp.completePayment('success')\r\n            });\r\n\r\n            tecPrInterface.listenFor('cancel-transaction', async (cancelEvent) => {\r\n                console.log('[CUSTOMER TEC CANCEL EVENT]: ');\r\n                console.log(cancelEvent);\r\n                console.log('typeof func');\r\n            });\r\n        }\r\n            \r\n\r\n        console.log('useTecPaymentsRequest hook:', createTecPrInterface);\r\n    }, [createTecPrInterface]);\r\n    // const { createPayment, getCurrentElements } = useTeConnect();\r\n\r\n    // const clickHandler = async(e) => {\r\n    //     try {\r\n    //         const elements = getCurrentElements();\r\n    //         const teConnectResponse = await createPayment(elements);\r\n    //         console.log('result:', teConnectResponse);\r\n    //     }\r\n    //     catch(err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // }\r\n    \r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <h1>TEC Demo</h1>\r\n            {/* <CardEntry stylesConfig={ customStyles } /> */}\r\n            { prInterface && <TecPaymentRequestButtons paymentRequestInterface={ prInterface } /> }\r\n            \r\n            {/* <button onClick={ clickHandler }>Create Token</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleApp;\r\n","import React from 'react';\nimport { TEConnect } from '@magensa/te-connect-react';\nimport { createTEConnect } from '@magensa/te-connect';\n\nimport ExampleApp from './components/exampleApp';\n\n\nconst teConnectInstance = createTEConnect(\"Y2xpZW50VG9rZW5Qb2NDb2RlL2NsaWVudFRva2VuUG9jVXNlcjpQYXNzd29yZDEh\", { enableTecPR: true });\n\nconst App = () => (\n    <TEConnect teConnect={ teConnectInstance }>\n        <ExampleApp />\n    </TEConnect>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}