{"version":3,"sources":["components/exampleApp/index.js","App.js","reportWebVitals.js","index.js"],"names":["hardCodedPaymentRequestObj","currencyCode","countryCode","supportedNetworks","merchantCapabilities","total","label","amount","type","ExampleApp","useState","tecPrInterface","useTecPaymentsRequest","useEffect","theRealTecPrInterface","console","log","style","height","teConnectInstance","createTEConnect","enableTecPR","App","teConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA8BMA,EAA6B,CAC/BC,aAAc,MACdC,YAAa,KACbC,kBAAmB,CAAC,OAAQ,aAAc,OAAQ,WAAY,OAC9DC,qBAAsB,CAAC,eACvBC,MAAO,CACHC,MAAO,mBACPC,OAAQ,OACRC,KAAM,UAgDCC,EA5CI,WAAO,IAAD,EACmBC,oBAAS,kBAAM,KADlC,mBAEfC,GAFe,UAEEC,mCA+BvB,OA7BAC,qBAAU,WAQN,GAAIF,EAAgB,CAChB,IAAMG,EAAwBH,EAAeX,GAC7Ce,QAAQC,IAAI,iBAAkBF,GAIlCC,QAAQC,IAAI,YAAaL,KAC1B,CAACA,IAeA,qBAAKM,MAAO,CAAEC,OAAQ,QAAtB,SACI,6CCtENC,EAAoBC,0BAAgB,mEAAoE,CAAEC,aAAa,IAQ9GC,EANH,kBACR,cAAC,YAAD,CAAWC,UAAYJ,EAAvB,SACI,cAAC,EAAD,OCCOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.ba5ab084.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { \r\n    //CardEntry, useTeConnect, \r\n    TecPaymentRequestButtons,\r\n    useTecPaymentsRequest  } from '@magensa/te-connect-react';\r\n\r\n\r\n// const customStyles = {\r\n//     base: {\r\n//         wrapper: { \r\n//             margin: 0, \r\n//             padding: 0\r\n//         },\r\n//         variants: {\r\n//             inputType: 'outlined',\r\n//             inputMargin: 'dense',\r\n//             autoMinHeight: true\r\n//         },\r\n//        backgroundColor: \"#424242\"\r\n//     },\r\n//     boxes: {\r\n//         labelColor: \"#BB86FC\",\r\n//         textColor: \"#BB86FC\",\r\n//         borderRadius: 10,\r\n//         errorColor: \"#CF6679\",\r\n//         inputColor: '#121212'\r\n//     }\r\n// }\r\n\r\n\r\nconst hardCodedPaymentRequestObj = {\r\n    currencyCode: \"USD\",\r\n    countryCode: \"US\",\r\n    supportedNetworks: ['visa', 'masterCard', 'amex', 'discover', 'jcb'],\r\n    merchantCapabilities: ['supports3DS'],\r\n    total: {\r\n        label: \"Test Transaction\",\r\n        amount: \"1.00\",\r\n        type: \"final\"\r\n    }\r\n};\r\n\r\nconst ExampleApp = () => {\r\n    const [ prAvailable, setPrAvailable ] = useState(() => false);\r\n    const tecPrInterface = useTecPaymentsRequest();\r\n\r\n    useEffect(() => {\r\n        // customerDefinedPrInterface.canMakePayments().then(prMethodsAvailable => {\r\n        //     console.log('PR methods available result: ', prMethodsAvailable);\r\n\r\n        //     if (prMethodsAvailable.applePay === true)\r\n        //         setPrAvailable(true);\r\n        // })\r\n\r\n        if (tecPrInterface) {\r\n            const theRealTecPrInterface = tecPrInterface(hardCodedPaymentRequestObj);\r\n            console.log('real interface', theRealTecPrInterface);\r\n        }\r\n            \r\n\r\n        console.log('teconnect', tecPrInterface);\r\n    }, [tecPrInterface]);\r\n    // const { createPayment, getCurrentElements } = useTeConnect();\r\n\r\n    // const clickHandler = async(e) => {\r\n    //     try {\r\n    //         const elements = getCurrentElements();\r\n    //         const teConnectResponse = await createPayment(elements);\r\n    //         console.log('result:', teConnectResponse);\r\n    //     }\r\n    //     catch(err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // }\r\n    \r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <h1>TEC Demo</h1>\r\n            {/* <CardEntry stylesConfig={ customStyles } /> */}\r\n            {/* { prAvailable && <TecPaymentRequestButtons paymentRequestInterface={ customerDefinedPrInterface } /> } */}\r\n            \r\n            {/* <button onClick={ clickHandler }>Create Token</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExampleApp;\r\n","import React from 'react';\nimport { TEConnect } from '@magensa/te-connect-react';\nimport { createTEConnect } from '@magensa/te-connect';\n\nimport ExampleApp from './components/exampleApp';\n\n\nconst teConnectInstance = createTEConnect(\"Y2xpZW50VG9rZW5Qb2NDb2RlL2NsaWVudFRva2VuUG9jVXNlcjpQYXNzd29yZDEh\", { enableTecPR: true });\n\nconst App = () => (\n    <TEConnect teConnect={ teConnectInstance }>\n        <ExampleApp />\n    </TEConnect>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}